{"version":3,"file":"index-CujjMcIX.js","sources":["../../node_modules/solid-js/web/dist/web.js","../../src/components/ModeSelector.tsx","../../src/components/NewsMode.tsx","../../src/components/CodeMode.tsx","../../src/components/ExtraMode.tsx","../../src/components/Stats.tsx","../../src/components/TypingArea.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["import {\n  createMemo,\n  createRoot,\n  createRenderEffect,\n  untrack,\n  sharedConfig,\n  enableHydration,\n  getOwner,\n  createEffect,\n  runWithOwner,\n  createSignal,\n  onCleanup,\n  splitProps\n} from \"solid-js\";\nexport {\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  createComponent,\n  createRenderEffect as effect,\n  getOwner,\n  mergeProps,\n  untrack\n} from \"solid-js\";\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"noValidate\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  novalidate: {\n    $: \"noValidate\",\n    FORM: 1\n  },\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/ new Set([\n  \"html\",\n  \"base\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"style\",\n  \"title\",\n  \"body\",\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"footer\",\n  \"header\",\n  \"main\",\n  \"nav\",\n  \"section\",\n  \"body\",\n  \"blockquote\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"figcaption\",\n  \"figure\",\n  \"hr\",\n  \"li\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"ul\",\n  \"a\",\n  \"abbr\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"br\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"kbd\",\n  \"mark\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"u\",\n  \"var\",\n  \"wbr\",\n  \"area\",\n  \"audio\",\n  \"img\",\n  \"map\",\n  \"track\",\n  \"video\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"param\",\n  \"picture\",\n  \"portal\",\n  \"source\",\n  \"svg\",\n  \"math\",\n  \"canvas\",\n  \"noscript\",\n  \"script\",\n  \"del\",\n  \"ins\",\n  \"caption\",\n  \"col\",\n  \"colgroup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"button\",\n  \"datalist\",\n  \"fieldset\",\n  \"form\",\n  \"input\",\n  \"label\",\n  \"legend\",\n  \"meter\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"progress\",\n  \"select\",\n  \"textarea\",\n  \"details\",\n  \"dialog\",\n  \"menu\",\n  \"summary\",\n  \"details\",\n  \"slot\",\n  \"template\",\n  \"acronym\",\n  \"applet\",\n  \"basefont\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"center\",\n  \"content\",\n  \"dir\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"hgroup\",\n  \"image\",\n  \"keygen\",\n  \"marquee\",\n  \"menuitem\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"rb\",\n  \"rtc\",\n  \"shadow\",\n  \"spacer\",\n  \"strike\",\n  \"tt\",\n  \"xmp\",\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"address\",\n  \"applet\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"basefont\",\n  \"bdi\",\n  \"bdo\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"center\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"content\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"dir\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"font\",\n  \"footer\",\n  \"form\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"image\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"plaintext\",\n  \"portal\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"shadow\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"spacer\",\n  \"span\",\n  \"strike\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"tt\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xmp\",\n  \"input\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\"\n]);\n\nconst memo = fn => createMemo(() => fn());\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? (bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart]) : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document\n      ? code()\n      : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG, isMathML) {\n  let node;\n  const create = () => {\n    const t = isMathML\n      ? document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"template\")\n      : document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode\n    ? () => untrack(() => document.importNode(node || (node = create()), true))\n    : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);\n  else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);\n  else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");\n  else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, (handler[0] = e => handlerFn.call(node, handler[1], e)));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return (nodeStyle.cssText = value);\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(\n      () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n    );\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get((key = getHydrationKey())))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;\n        else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const { completed, events } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++)\n    node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if (\n    (forceProp = prop.slice(0, 5) === \"prop:\") ||\n    (isChildProp = ChildProperties.has(prop)) ||\n    (!isSVG &&\n      ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop)))) ||\n    (isCE = node.nodeName.includes(\"-\") || \"is\" in props)\n  ) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);\n    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;\n    else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);\n    else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value =>\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value\n    });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host &&\n      typeof node.host !== \"string\" &&\n      !node.host._$host &&\n      node.contains(e.target) &&\n      retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  } else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();\n      else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = (multi && current[0] && current[0].parentNode) || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => (current = insertExpression(parent, array, current, marker, true)));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return (current = [...parent.childNodes]);\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return (current = nodes);\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return (current = multi ? [value] : value);\n    if (Array.isArray(current)) {\n      if (multi) return (current = cleanChildren(parent, current, marker, value));\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false);\n    else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic =\n          normalizeIncomingArray(\n            normalized,\n            Array.isArray(item) ? item : [item],\n            Array.isArray(prev) ? prev : [prev]\n          ) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n      else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return (parent.textContent = \"\");\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key))\n      sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const { useShadow } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(\n    () => {\n      if (hydrating) getOwner().user = hydrating = false;\n      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n      const el = mount();\n      if (el instanceof HTMLHeadElement) {\n        const [clean, setClean] = createSignal(false);\n        const cleanup = () => setClean(true);\n        createRoot(dispose => insert(el, () => (!clean() ? content() : dispose()), null));\n        onCleanup(cleanup);\n      } else {\n        const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot =\n            useShadow && container.attachShadow\n              ? container.attachShadow({\n                  mode: \"open\"\n                })\n              : container;\n        Object.defineProperty(container, \"_$host\", {\n          get() {\n            return marker.parentNode;\n          },\n          configurable: true\n        });\n        insert(renderRoot, content);\n        el.appendChild(container);\n        props.ref && props.ref(container);\n        onCleanup(() => el.removeChild(container));\n      }\n    },\n    undefined,\n    {\n      render: !hydrating\n    }\n  );\n  return marker;\n}\nfunction createDynamic(component, props) {\n  const cached = createMemo(component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(props));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, props, isSvg);\n        return el;\n    }\n  });\n}\nfunction Dynamic(props) {\n  const [, others] = splitProps(props, [\"component\"]);\n  return createDynamic(() => props.component, others);\n}\n\nexport {\n  Aliases,\n  voidFn as Assets,\n  ChildProperties,\n  DOMElements,\n  DelegatedEvents,\n  Dynamic,\n  Hydration,\n  voidFn as HydrationScript,\n  NoHydration,\n  Portal,\n  Properties,\n  RequestContext,\n  SVGElements,\n  SVGNamespace,\n  addEventListener,\n  assign,\n  classList,\n  className,\n  clearDelegatedEvents,\n  createDynamic,\n  delegateEvents,\n  dynamicProperty,\n  escape,\n  voidFn as generateHydrationScript,\n  voidFn as getAssets,\n  getHydrationKey,\n  getNextElement,\n  getNextMarker,\n  getNextMatch,\n  getPropAlias,\n  voidFn as getRequestEvent,\n  hydrate,\n  innerHTML,\n  insert,\n  isDev,\n  isServer,\n  memo,\n  render,\n  renderToStream,\n  renderToString,\n  renderToStringAsync,\n  resolveSSRNode,\n  runHydrationEvents,\n  setAttribute,\n  setAttributeNS,\n  setBoolAttribute,\n  setProperty,\n  spread,\n  ssr,\n  ssrAttribute,\n  ssrClassList,\n  ssrElement,\n  ssrHydrationKey,\n  ssrSpread,\n  ssrStyle,\n  style,\n  template,\n  use,\n  voidFn as useAssets\n};\n","import type { Component } from 'solid-js';\n\ninterface ModeSelectorProps {\n  mode: 'news' | 'code' | 'extra';\n  onModeChange: (mode: 'news' | 'code' | 'extra') => void;\n}\n\nconst ModeSelector: Component<ModeSelectorProps> = ({ mode, onModeChange }) => {\n  return (\n    <div class=\"flex gap-2 mb-4\">\n      <button\n        class={`btn ${mode === 'news' ? 'active' : ''}`}\n        onClick={() => onModeChange('news')}\n      >\n        News\n      </button>\n      <button\n        class={`btn ${mode === 'code' ? 'active' : ''}`}\n        onClick={() => onModeChange('code')}\n      >\n        Code\n      </button>\n      <button\n        class={`btn ${mode === 'extra' ? 'active' : ''}`}\n        onClick={() => onModeChange('extra')}\n      >\n        Extra\n      </button>\n    </div>\n  );\n};\n\nexport default ModeSelector; ","import { createSignal, onMount, onCleanup } from 'solid-js';\n\ninterface NewsModeProps {\n  text: string;\n  onComplete: () => void;\n  onTypingProgress: (index: number, errors: number[]) => void;\n}\n\nexport default function NewsMode(props: NewsModeProps) {\n  const [currentIndex, setCurrentIndex] = createSignal(0);\n  const [errors, setErrors] = createSignal<number[]>([]);\n  const [isFocused, setIsFocused] = createSignal(false);\n  const [cursorPosition, setCursorPosition] = createSignal({ line: 0, column: 0 });\n  const [isCompleted, setIsCompleted] = createSignal(false);\n  let editorRef: HTMLDivElement | undefined;\n\n  // Process text to add line breaks at appropriate points\n  const processedText = () => {\n    const maxLineLength = 76; // Reduced from 80 to 76\n    const words = props.text.split(' ');\n    let lines: string[] = [];\n    let currentLine = '';\n\n    words.forEach((word) => {\n      if (currentLine.length + word.length + 1 <= maxLineLength) {\n        currentLine += (currentLine ? ' ' : '') + word;\n      } else {\n        if (currentLine) lines.push(currentLine.trimEnd());\n        currentLine = word;\n      }\n    });\n    if (currentLine) lines.push(currentLine.trimEnd());\n\n    return lines.join('\\n');\n  };\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!isFocused()) return;\n\n    // Prevent default behavior for special keys\n    if (e.key === 'Tab' || e.key === 'Enter') {\n      e.preventDefault();\n    }\n\n    const char = processedText()[currentIndex()];\n    let inputChar = e.key;\n\n    // Handle special characters\n    if (e.key === 'Shift' || e.key === 'Control' || e.key === 'Alt' || e.key === 'Meta') {\n      return;\n    }\n\n    // Handle Enter key or Space at end of line\n    if (e.key === 'Enter' || (e.key === ' ' && char === '\\n')) {\n      inputChar = '\\n';\n      e.preventDefault();\n    }\n\n    // Handle backspace\n    if (e.key === 'Backspace') {\n      if (currentIndex() > 0) {\n        setCurrentIndex((prev) => prev - 1);\n        setErrors((prev) => prev.filter((i) => i !== currentIndex() - 1));\n        updateCursorPosition();\n        props.onTypingProgress(currentIndex() - 1, errors());\n      }\n      return;\n    }\n\n    if (inputChar === char) {\n      setCurrentIndex((prev) => prev + 1);\n      updateCursorPosition();\n      props.onTypingProgress(currentIndex() + 1, errors());\n      if (currentIndex() === processedText().length - 1) {\n        setIsCompleted(true);\n        props.onComplete();\n      }\n    } else {\n      setErrors((prev) => [...prev, currentIndex()]);\n      props.onTypingProgress(currentIndex(), [...errors(), currentIndex()]);\n    }\n  };\n\n  const updateCursorPosition = () => {\n    const text = processedText().slice(0, currentIndex());\n    const lines = text.split('\\n');\n    const line = lines.length - 1;\n    const column = lines[lines.length - 1].length;\n    setCursorPosition({ line, column });\n  };\n\n  const handleClick = () => {\n    setIsFocused(true);\n    editorRef?.focus();\n  };\n\n  // Auto-focus when component mounts\n  onMount(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    // Focus immediately\n    setIsFocused(true);\n    editorRef?.focus();\n  });\n\n  onCleanup(() => {\n    window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const renderText = () => {\n    const lines = processedText().split('\\n');\n    let globalIndex = 0;\n\n    return lines.map((line, lineIndex) => {\n      const chars = line.split('').map((char) => {\n        const index = globalIndex++;\n        let className = 'untyped-char';\n        \n        if (index < currentIndex()) {\n          className = errors().includes(index) ? 'error-char' : 'typed-char';\n        } else if (index === currentIndex()) {\n          className = 'current-char';\n        }\n\n        return <span class={className}>{char}</span>;\n      });\n\n      // Add cursor at the current position\n      if (lineIndex === cursorPosition().line) {\n        if (cursorPosition().column === line.length) {\n          // Cursor at the end of the line\n          chars.push(<span class=\"cursor\"></span>);\n        } else if (cursorPosition().column === 0) {\n          // Cursor at the start of the line\n          chars.unshift(<span class=\"cursor\"></span>);\n        } else {\n          // Cursor in the middle of the line\n          chars.splice(cursorPosition().column, 0, <span class=\"cursor\"></span>);\n        }\n      }\n\n      // Add newline character if not the last line\n      if (lineIndex < lines.length - 1) {\n        const newlineIndex = globalIndex++;\n        const newlineClass = newlineIndex < currentIndex() ? 'typed-char' : 'untyped-char';\n        chars.push(<span class={newlineClass}>{'\\n'}</span>);\n      }\n\n      return (\n        <div class=\"line\">\n          {chars}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div class=\"mt-8\">\n      <div \n        ref={editorRef}\n        class={`typing-text p-4 rounded bg-tokyo-bg-light font-mono outline-none h-[500px] overflow-y-auto ${isCompleted() ? 'firework' : ''}`}\n        onClick={handleClick}\n        tabIndex={0}\n      >\n        <pre class=\"m-0 p-0\"><code>{renderText()}</code></pre>\n      </div>\n    </div>\n  );\n} ","import { createSignal, onMount, onCleanup, Show } from 'solid-js';\nimport '../styles/highlight.css';\n\ninterface CodeModeProps {\n  text: string;\n  onComplete: () => void;\n  onTypingProgress: (index: number, errors: number[]) => void;\n}\n\nexport default function CodeMode(props: CodeModeProps) {\n  const [currentIndex, setCurrentIndex] = createSignal(0);\n  const [errors, setErrors] = createSignal<number[]>([]);\n  const [isFocused, setIsFocused] = createSignal(false);\n  const [cursorPosition, setCursorPosition] = createSignal({ line: 0, column: 0 });\n  const [isCompleted, setIsCompleted] = createSignal(false);\n  const [isCapsLockOn, setIsCapsLockOn] = createSignal(false);\n  let editorRef: HTMLDivElement | undefined;\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!isFocused()) return;\n\n    // Check for CapsLock\n    setIsCapsLockOn(e.getModifierState('CapsLock'));\n\n    // Prevent default behavior for special keys\n    if (e.key === 'Tab' || e.key === 'Enter') {\n      e.preventDefault();\n    }\n\n    const char = props.text[currentIndex()];\n    let inputChar = e.key;\n\n    // Handle special characters\n    if (e.key === 'Shift' || e.key === 'Control' || e.key === 'Alt' || e.key === 'Meta') {\n      return;\n    }\n\n    // Handle Enter key or Space at end of line\n    if (e.key === 'Enter' || (e.key === ' ' && char === '\\n')) {\n      inputChar = '\\n';\n      e.preventDefault();\n    }\n\n    // Handle backspace\n    if (e.key === 'Backspace') {\n      if (currentIndex() > 0) {\n        setCurrentIndex((prev) => prev - 1);\n        setErrors((prev) => prev.filter((i) => i !== currentIndex() - 1));\n        updateCursorPosition();\n        props.onTypingProgress(currentIndex() - 1, errors());\n      }\n      return;\n    }\n\n    if (inputChar === char) {\n      setCurrentIndex((prev) => prev + 1);\n      updateCursorPosition();\n      props.onTypingProgress(currentIndex() + 1, errors());\n      if (currentIndex() === props.text.length - 1) {\n        setIsCompleted(true);\n        props.onComplete();\n      }\n    } else {\n      setErrors((prev) => [...prev, currentIndex()]);\n      props.onTypingProgress(currentIndex(), [...errors(), currentIndex()]);\n    }\n  };\n\n  const updateCursorPosition = () => {\n    const text = props.text.slice(0, currentIndex());\n    const lines = text.split('\\n');\n    const line = lines.length - 1;\n    const column = lines[lines.length - 1].length ;\n    setCursorPosition({ line, column });\n  };\n\n  const handleClick = () => {\n    setIsFocused(true);\n    editorRef?.focus();\n  };\n\n  // Auto-focus when component mounts\n  onMount(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    // Focus immediately\n    setIsFocused(true);\n    editorRef?.focus();\n  });\n\n  onCleanup(() => {\n    window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const renderText = () => {\n    const lines = props.text.split('\\n');\n    let globalIndex = 0;\n\n    return lines.map((line, lineIndex) => {\n      const chars = line.split('').map((char) => {\n        const index = globalIndex++;\n        let className = 'untyped-char';\n        \n        if (index < currentIndex()) {\n          className = errors().includes(index) ? 'error-char' : 'typed-char';\n        } else if (index === currentIndex()) {\n          className = 'current-char';\n        }\n\n        return <span class={className}>{char}</span>;\n      });\n\n      // Add cursor at the current position\n      if (lineIndex === cursorPosition().line) {\n        if (cursorPosition().column === line.length) {\n          // Cursor at the end of the line\n          chars.push(<span class=\"cursor\"></span>);\n        } else if (cursorPosition().column === 0) {\n          // Cursor at the start of the line\n          chars.unshift(<span class=\"cursor\"></span>);\n        } else {\n          // Cursor in the middle of the line\n          chars.splice(cursorPosition().column, 0, <span class=\"cursor\"></span>);\n        }\n      }\n\n      // Add newline character if not the last line\n      if (lineIndex < lines.length - 1) {\n        const newlineIndex = globalIndex++;\n        const newlineClass = newlineIndex < currentIndex() ? 'typed-char' : 'untyped-char';\n        chars.push(<span class={newlineClass}>{'\\n'}</span>);\n      }\n\n      return (\n        <div class=\"line\">\n          {chars}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div class=\"mt-8\">\n      <Show when={isCapsLockOn()}>\n        <div class=\"capslock-warning\">\n          CapsLock is ON\n        </div>\n      </Show>\n\n      <div \n        ref={editorRef}\n        class={`typing-text code-mode p-4 rounded bg-tokyo-bg-light font-mono outline-none h-[500px] overflow-y-auto ${isCompleted() ? 'firework' : ''}`}\n        onClick={handleClick}\n        tabIndex={0}\n      >\n        <pre class=\"m-0 p-0\"><code>{renderText()}</code></pre>\n      </div>\n    </div>\n  );\n} ","import { createSignal, onMount, onCleanup, createEffect } from 'solid-js';\n\ninterface ExtraModeProps {\n  text: string;\n  onComplete: () => void;\n  onTypingProgress: (index: number, errors: number[]) => void;\n  problematicKeys: Record<string, number>;\n  onBack: () => void;\n}\n\nexport default function ExtraMode(props: ExtraModeProps) {\n  const [currentIndex, setCurrentIndex] = createSignal(0);\n  const [errors, setErrors] = createSignal<number[]>([]);\n  const [isFocused, setIsFocused] = createSignal(false);\n  const [cursorPosition, setCursorPosition] = createSignal({ line: 0, column: 0 });\n  const [isCompleted, setIsCompleted] = createSignal(false);\n  let editorRef: HTMLDivElement | undefined;\n\n  // Generate practice text based on problematic keys\n  const generatePracticeText = () => {\n    const lines: string[] = [];\n    const charsPerLine = 36;\n    \n    // Get top problematic keys or use defaults\n    const defaultKeys = ['[', ']', '{', '}', '(', ')', ';', ':', '\"', \"'\"];\n    const topKeys = Object.keys(props.problematicKeys).length > 0\n      ? Object.entries(props.problematicKeys)\n          .sort(([, a], [, b]) => b - a)\n          .slice(0, 10)\n          .map(([key]) => key)\n      : defaultKeys;\n\n    // Generate 5 lines\n    for (let i = 0; i < 5; i++) {\n      let line = '';\n      while (line.length < charsPerLine) {\n        // Add a random problematic key\n        const key = topKeys[Math.floor(Math.random() * topKeys.length)];\n        line += key;\n        \n        // Add a space if not at the end\n        if (line.length < charsPerLine) {\n          line += ' ';\n        }\n      }\n      lines.push(line.trimEnd());\n    }\n\n    return lines.join('\\n');\n  };\n\n  const practiceText = generatePracticeText();\n\n  // Reset state when component mounts or problematic keys change\n  createEffect(() => {\n    setCurrentIndex(0);\n    setErrors([]);\n    setIsCompleted(false);\n    setIsFocused(true);\n    editorRef?.focus();\n  });\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!isFocused()) return;\n\n    // Prevent default behavior for special keys\n    if (e.key === 'Tab' || e.key === 'Enter') {\n      e.preventDefault();\n    }\n\n    const char = practiceText[currentIndex()];\n    let inputChar = e.key;\n\n    // Handle special characters\n    if (e.key === 'Shift' || e.key === 'Control' || e.key === 'Alt' || e.key === 'Meta') {\n      return;\n    }\n\n    // Handle Enter key or Space at end of line\n    if (e.key === 'Enter' || (e.key === ' ' && char === '\\n')) {\n      inputChar = '\\n';\n      e.preventDefault();\n    }\n\n    // Handle backspace\n    if (e.key === 'Backspace') {\n      if (currentIndex() > 0) {\n        setCurrentIndex((prev) => prev - 1);\n        setErrors((prev) => prev.filter((i) => i !== currentIndex() - 1));\n        updateCursorPosition();\n        props.onTypingProgress(currentIndex() - 1, errors());\n      }\n      return;\n    }\n\n    if (inputChar === char) {\n      setCurrentIndex((prev) => prev + 1);\n      updateCursorPosition();\n      props.onTypingProgress(currentIndex() + 1, errors());\n      if (currentIndex() === practiceText.length - 1) {\n        setIsCompleted(true);\n        props.onComplete();\n      }\n    } else {\n      setErrors((prev) => [...prev, currentIndex()]);\n      props.onTypingProgress(currentIndex(), [...errors(), currentIndex()]);\n    }\n  };\n\n  const updateCursorPosition = () => {\n    const text = practiceText.slice(0, currentIndex());\n    const lines = text.split('\\n');\n    const line = lines.length - 1;\n    const column = lines[lines.length - 1].length;\n    setCursorPosition({ line, column });\n  };\n\n  const handleClick = () => {\n    setIsFocused(true);\n    editorRef?.focus();\n  };\n\n  // Auto-focus when component mounts\n  onMount(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    // Focus immediately\n    setIsFocused(true);\n    editorRef?.focus();\n  });\n\n  onCleanup(() => {\n    window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const renderText = () => {\n    const lines = practiceText.split('\\n');\n    let globalIndex = 0;\n\n    return lines.map((line, lineIndex) => {\n      const chars = line.split('').map((char) => {\n        const index = globalIndex++;\n        let className = 'untyped-char';\n        \n        if (index < currentIndex()) {\n          className = errors().includes(index) ? 'error-char' : 'typed-char';\n        } else if (index === currentIndex()) {\n          className = 'current-char';\n        }\n\n        return <span class={className}>{char}</span>;\n      });\n\n      // Add cursor at the current position\n      if (lineIndex === cursorPosition().line) {\n        if (cursorPosition().column === line.length) {\n          // Cursor at the end of the line\n          chars.push(<span class=\"cursor\"></span>);\n        } else if (cursorPosition().column === 0) {\n          // Cursor at the start of the line\n          chars.unshift(<span class=\"cursor\"></span>);\n        } else {\n          // Cursor in the middle of the line\n          chars.splice(cursorPosition().column, 0, <span class=\"cursor\"></span>);\n        }\n      }\n\n      // Add newline character if not the last line\n      if (lineIndex < lines.length - 1) {\n        const newlineIndex = globalIndex++;\n        const newlineClass = newlineIndex < currentIndex() ? 'typed-char' : 'untyped-char';\n        chars.push(<span class={newlineClass}>{'\\n'}</span>);\n      }\n\n      return (\n        <div class=\"line\">\n          {chars}\n        </div>\n      );\n    });\n  };\n\n  const getTopProblematicKeys = () => {\n    const defaultKeys = ['[', ']', '{', '}', '(', ')', ';', ':', '\"', \"'\"];\n    return Object.keys(props.problematicKeys).length > 0\n      ? Object.entries(props.problematicKeys)\n          .sort(([, a], [, b]) => b - a)\n          .slice(0, 5)\n          .map(([key, count]) => ({ key, count }))\n      : defaultKeys.map(key => ({ key, count: 0 }));\n  };\n\n  return (\n    <div class=\"mt-8\">\n      <div \n        ref={editorRef}\n        class={`typing-text extra-mode p-4 rounded bg-tokyo-bg-light font-mono outline-none h-[500px] overflow-y-auto ${isCompleted() ? 'firework' : ''}`}\n        onClick={handleClick}\n        tabIndex={0}\n      >\n        <pre class=\"m-0 p-0\"><code>{renderText()}</code></pre>\n      </div>\n      \n      {isCompleted() && (\n        <div class=\"mt-8 text-center\">\n          <h3 class=\"text-xl font-bold mb-4\">Your Most Problematic Keys:</h3>\n          <div class=\"flex gap-2 justify-center mb-6\">\n            {getTopProblematicKeys().map(({ key, count }) => (\n              <div class=\"problematic-key\">\n                {key} ({count})\n              </div>\n            ))}\n          </div>\n          <button \n            class=\"btn-large\"\n            onClick={() => window.location.reload()}\n          >\n            Practice Problematic Keys\n          </button>\n        </div>\n      )}\n    </div>\n  );\n} ","import { createSignal, createEffect } from 'solid-js';\n\ninterface StatsProps {\n  currentIndex: number;\n  errors: number[];\n  totalChars: number;\n}\n\nexport default function Stats(props: StatsProps) {\n  const [elapsedTime, setElapsedTime] = createSignal(0);\n  const [isActive, setIsActive] = createSignal(false);\n  let timer: number | undefined;\n\n  // Reset timer when currentIndex changes to 0 (mode change)\n  createEffect(() => {\n    if (props.currentIndex === 0) {\n      setElapsedTime(0);\n      setIsActive(false);\n      if (timer) {\n        clearInterval(timer);\n        timer = undefined;\n      }\n    } else if (!isActive()) {\n      setIsActive(true);\n      timer = window.setInterval(() => {\n        if (isActive()) {\n          setElapsedTime(prev => prev + 1);\n        }\n      }, 1000);\n    }\n  });\n\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const calculateWPM = () => {\n    if (elapsedTime() === 0) return 0;\n    const minutes = elapsedTime() / 60;\n    // Standard WPM calculation: (characters typed / 5) / minutes\n    // This is the standard formula used in typing tests\n    const words = props.currentIndex / 5;\n    return Math.round(words / minutes);\n  };\n\n  const calculateAccuracy = () => {\n    if (props.currentIndex === 0) return 100;\n    const errorRate = props.errors.length / props.currentIndex;\n    return Math.round((1 - errorRate) * 100);\n  };\n\n  return (\n    <div class=\"mt-4 grid grid-cols-3 gap-4 text-center\">\n      <div class=\"p-4 rounded bg-tokyo-bg-light\">\n        <div class=\"text-2xl font-bold text-tokyo-blue\">{formatTime(elapsedTime())}</div>\n        <div class=\"text-sm text-tokyo-comment\">Time</div>\n      </div>\n      <div class=\"p-4 rounded bg-tokyo-bg-light\">\n        <div class=\"text-2xl font-bold text-tokyo-green\">{calculateWPM()}</div>\n        <div class=\"text-sm text-tokyo-comment\">WPM</div>\n      </div>\n      <div class=\"p-4 rounded bg-tokyo-bg-light\">\n        <div class=\"text-2xl font-bold text-tokyo-red\">{calculateAccuracy()}%</div>\n        <div class=\"text-sm text-tokyo-comment\">Accuracy</div>\n      </div>\n    </div>\n  );\n} ","import { createSignal, createEffect, Show } from 'solid-js';\nimport NewsMode from './NewsMode';\nimport CodeMode from './CodeMode';\nimport ExtraMode from './ExtraMode';\nimport Stats from './Stats';\n\ninterface TypingAreaProps {\n  text: string;\n  onComplete: () => void;\n  onTypingProgress: (index: number, errors: number[]) => void;\n}\n\nexport default function TypingArea(props: TypingAreaProps) {\n  const [currentIndex, setCurrentIndex] = createSignal(0);\n  const [errors, setErrors] = createSignal<number[]>([]);\n  const [mode, setMode] = createSignal<'news' | 'code' | 'extra'>('news');\n  const [pastedText, setPastedText] = createSignal('');\n  const [githubUrl, setGithubUrl] = createSignal('');\n  const [problematicKeys, setProblematicKeys] = createSignal<Record<string, number>>({});\n  const [currentText, setCurrentText] = createSignal(props.text);\n\n  // Default text sources\n  const defaultNewsText = 'My father\\'s family name being Pirrip, and my Christian name Philip, my infant tongue could make of both names nothing longer or more explicit than Pip. So, I called myself Pip, and came to be called Pip.';\n  const defaultCodeText = \n  `def classify_image(image_path):\n    # Load the image\n    image = cv2.imread(image_path)\n    \n    # Preprocess the image\n    image = preprocess_image(image)\n    \n    # Classify the image\n    result = model.predict(image)\n    \n    return result`;\n\n  // Set initial text based on mode\n  createEffect(() => {\n    if (mode() === 'news') {\n      setCurrentText(defaultNewsText);\n    } else if (mode() === 'code') {\n      setCurrentText(defaultCodeText);\n    }\n    // Reset all state when mode changes\n    resetTyping();\n  });\n\n  const resetTyping = () => {\n    setCurrentIndex(0);\n    setErrors([]);\n    setProblematicKeys({});\n    // Reset all statistics by calling onTypingProgress with initial values\n    props.onTypingProgress(0, []);\n  };\n\n  const handleModeChange = (newMode: 'news' | 'code' | 'extra') => {\n    setMode(newMode);\n    // Reset all state when mode changes\n    resetTyping();\n  };\n\n  const handleTextPaste = () => {\n    if (pastedText()) {\n      // Limit pasted text to 1000 characters\n      const limitedText = pastedText().slice(0, 1000);\n      setCurrentText(limitedText);\n      setCurrentIndex(0);\n      setErrors([]);\n      setPastedText('');\n    }\n  };\n\n  const handleGithubUrlSubmit = async () => {\n    if (!githubUrl()) return;\n    \n    try {\n      // Convert GitHub URL to raw content URL\n      const rawUrl = githubUrl()\n        .replace('github.com', 'raw.githubusercontent.com')\n        .replace('/blob/', '/');\n      \n      const response = await fetch(rawUrl);\n      if (!response.ok) throw new Error('Failed to fetch file');\n      \n      const content = await response.text();\n      // Split into lines, take first 100, and join back\n      const lines = content.split('\\n').slice(0, 100).join('\\n');\n      setCurrentText(lines);\n      setCurrentIndex(0);\n      setErrors([]);\n      setGithubUrl('');\n    } catch (error) {\n      console.error('Error fetching GitHub file:', error);\n      alert('Failed to fetch the file. Please check the URL and try again.');\n    }\n  };\n\n  const handleTypingProgress = (index: number, newErrors: number[]) => {\n    setCurrentIndex(index);\n    setErrors(newErrors);\n    props.onTypingProgress(index, newErrors);\n  };\n\n  return (\n    <div class=\"w-full max-w-4xl mx-auto\">\n      <div class=\"flex justify-between items-center mb-4\">\n        <div class=\"flex gap-2\">\n          <button\n            class={`btn ${mode() === 'news' ? 'active' : ''}`}\n            onClick={() => handleModeChange('news')}\n          >\n            News\n          </button>\n          <button\n            class={`btn ${mode() === 'code' ? 'active' : ''}`}\n            onClick={() => handleModeChange('code')}\n          >\n            Code\n          </button>\n          <button\n            class={`btn ${mode() === 'extra' ? 'active' : ''}`}\n            onClick={() => handleModeChange('extra')}\n          >\n            Extra\n          </button>\n        </div>\n        <Show when={mode() !== 'extra'}>\n          <div style=\"display: flex; gap: 0.5rem; align-items: center;\">\n            <input\n              type=\"text\"\n              style=\"width: 300px; padding: 0.5rem; border-radius: 0.25rem; background: #1a1b26; color: #a9b1d6; border: 1px solid #24283b;\"\n              placeholder={mode() === 'news' ? \"Paste text here (max 1000 chars)\" : \"Paste GitHub URL here (first 100 lines)\"}\n              value={mode() === 'news' ? pastedText() : githubUrl()}\n              onInput={(e) => {\n                if (mode() === 'news') {\n                  setPastedText(e.currentTarget.value.slice(0, 1000));\n                } else {\n                  setGithubUrl(e.currentTarget.value);\n                }\n              }}\n            />\n            <button\n              class=\"btn\"\n              onClick={mode() === 'news' ? handleTextPaste : handleGithubUrlSubmit}\n            >\n              Import\n            </button>\n          </div>\n        </Show>\n      </div>\n\n      <Show when={mode() === 'news'}>\n        <NewsMode\n          text={currentText()}\n          onComplete={props.onComplete}\n          onTypingProgress={handleTypingProgress}\n        />\n      </Show>\n      <Show when={mode() === 'code'}>\n        <CodeMode\n          text={currentText()}\n          onComplete={props.onComplete}\n          onTypingProgress={handleTypingProgress}\n        />\n      </Show>\n      <Show when={mode() === 'extra'}>\n        <ExtraMode\n          text={currentText()}\n          onComplete={props.onComplete}\n          onTypingProgress={handleTypingProgress}\n          problematicKeys={problematicKeys()}\n          onBack={() => handleModeChange('news')}\n        />\n      </Show>\n\n      <Stats\n        currentIndex={currentIndex()}\n        errors={errors()}\n        totalChars={currentText().length}\n      />\n    </div>\n  );\n} ","import { createSignal, Show } from 'solid-js';\nimport ModeSelector from './components/ModeSelector';\nimport TypingArea from './components/TypingArea';\nimport ExtraMode from './components/ExtraMode';\n\nfunction App() {\n  const [showExtra, setShowExtra] = createSignal(false);\n  const [startTime, setStartTime] = createSignal<number | null>(null);\n\n  const handleTypingProgress = () => {\n    if (!startTime()) {\n      setStartTime(Date.now());\n    }\n  };\n\n  const handleComplete = () => {\n    // Remove unused variables: endTime, index, newErrors, and any others flagged by the TypeScript error log.\n  };\n\n  return (\n    <div class=\"min-h-screen p-8 bg-tokyo-bg text-tokyo-fg\">\n      <div class=\"max-w-4xl mx-auto\">\n        <h1 class=\"text-4xl font-bold mb-8 text-center text-tokyo-blue\">Cotype</h1>\n        \n        <Show when={!showExtra()}>\n          <ModeSelector mode=\"news\" onModeChange={() => {}} />\n          <TypingArea\n            text=\"\"\n            onComplete={handleComplete}\n            onTypingProgress={handleTypingProgress}\n          />\n        </Show>\n\n        <Show when={showExtra()}>\n          <ExtraMode\n            text=\"\"\n            onComplete={handleComplete}\n            onTypingProgress={handleTypingProgress}\n            problematicKeys={{}}\n            onBack={() => setShowExtra(false)}\n          />\n        </Show>\n      </div>\n    </div>\n  );\n}\n\nexport default App; ","/* @refresh reload */\nimport { render } from 'solid-js/web'\nimport './index.css'\nimport App from './App.tsx'\n\nconst root = document.getElementById('root')\n\nrender(() => <App />, root!) "],"names":["$$EVENTS","template","html","isImportNode","isSVG","isMathML","node","fn","t","document","createElement","innerHTML","content","firstChild","create","cloneNode","delegateEvents","eventNames","window","e","Set","i","l","length","name","has","add","addEventListener","eventHandler","className","value","removeAttribute","use","element","arg","untrack","insert","parent","accessor","marker","initial","undefined","insertExpression","createRenderEffect","current","target","key","type","oriTarget","oriCurrentTarget","currentTarget","retarget","Object","defineProperty","configurable","handleNode","handler","disabled","data","call","cancelBubble","host","_$host","contains","walkUpTree","parentNode","get","composedPath","path","unwrapArray","multi","toString","nodeType","createTextNode","cleanChildren","textContent","v","Array","isArray","array","currentArray","normalizeIncomingArray","appendNodes","a","b","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","remove","Map","set","index","sequence","replaceChild","reconcileArrays","appendChild","normalized","unwrap","dynamic","len","item","prev","push","String","replacement","inserted","el","isParent","ModeSelector","mode","onModeChange","_el$","_tmpl$","_el$2","_el$3","_el$4","$$click","_$className","_$delegateEvents","NewsMode","props","currentIndex","setCurrentIndex","createSignal","errors","setErrors","isFocused","setIsFocused","cursorPosition","setCursorPosition","line","column","isCompleted","setIsCompleted","editorRef","processedText","words","text","split","lines","currentLine","forEach","word","trimEnd","join","handleKeyDown","preventDefault","char","inputChar","updateCursorPosition","onTypingProgress","onComplete","filter","slice","handleClick","focus","onMount","onCleanup","removeEventListener","renderText","globalIndex","lineIndex","chars","includes","_$insert","_tmpl$2","unshift","splice","newlineClass","_el$5","_tmpl$3","_el$6","_tmpl$4","_el$7","_tmpl$5","_el$8","_el$0","_$use","CodeMode","isCapsLockOn","setIsCapsLockOn","getModifierState","_tmpl$6","_el$9","_el$1","_$createComponent","Show","when","children","ExtraMode","practiceText","generatePracticeText","topKeys","keys","problematicKeys","entries","sort","Math","floor","random","createEffect","_c$","createMemo","_el$11","_el$12","getTopProblematicKeys","count","_el$13","_tmpl$7","_el$14","_el$16","location","reload","Stats","elapsedTime","setElapsedTime","isActive","setIsActive","timer","clearInterval","setInterval","formatTime","calculateWPM","minutes","round","calculateAccuracy","errorRate","seconds","padStart","TypingArea","setMode","pastedText","setPastedText","githubUrl","setGithubUrl","setProblematicKeys","currentText","setCurrentText","resetTyping","handleModeChange","newMode","handleTextPaste","limitedText","handleGithubUrlSubmit","async","rawUrl","replace","response","fetch","ok","Error","error","alert","handleTypingProgress","newErrors","$$input","_$setAttribute","setAttribute","onBack","totalChars","_$effect","_p$","_v$","_v$2","_v$3","App","showExtra","setShowExtra","startTime","setStartTime","Date","now","handleComplete","code","init","options","disposer","createRoot","dispose","owner","render","getElementById"],"mappings":"yyBA+iBA,MAAMA,EAAW,gBAcjB,SAASC,EAASC,EAAMC,EAAcC,EAAOC,GAC3C,IAAIC,EACJ,MAOMC,EAEF,KAAOD,IAASA,EATL,MACb,MAAME,EAEFC,SAASC,cAAc,YAE3B,OADAF,EAAEG,UAAYT,EAC6DM,EAAEI,QAAQC,UAAU,EAItEC,KAAWC,WAAU,GAEhD,OADAR,EAAGQ,UAAYR,EACRA,CACT,CACA,SAASS,EAAeC,EAAYR,EAAWS,OAAOT,UACpD,MAAMU,EAAIV,EAAST,KAAcS,EAAST,GAAY,IAAIoB,KAC1D,IAAK,IAAIC,EAAI,EAAGC,EAAIL,EAAWM,OAAQF,EAAIC,EAAGD,IAAK,CACjD,MAAMG,EAAOP,EAAWI,GACnBF,EAAEM,IAAID,KACTL,EAAEO,IAAIF,GACNf,EAASkB,iBAAiBH,EAAMI,GAEtC,CACA,CAyBA,SAASC,EAAUvB,EAAMwB,GAEV,MAATA,EAAexB,EAAKyB,gBAAgB,SACnCzB,EAAKuB,UAAYC,CACxB,CAyEA,SAASE,EAAIzB,EAAI0B,EAASC,GACxB,OAAOC,GAAQ,IAAM5B,EAAG0B,EAASC,IACnC,CACA,SAASE,EAAOC,EAAQC,EAAUC,EAAQC,GAExC,QADeC,IAAXF,GAAyBC,IAASA,EAAU,IACxB,mBAAbF,EAAyB,OAAOI,EAAiBL,EAAQC,EAAUE,EAASD,GACvFI,GAAmBC,GAAWF,EAAiBL,EAAQC,IAAYM,EAASL,IAASC,EACvF,CA0JA,SAASZ,EAAaT,GAIpB,IAAIb,EAAOa,EAAE0B,OACb,MAAMC,EAAM,KAAK3B,EAAE4B,OACbC,EAAY7B,EAAE0B,OACdI,EAAmB9B,EAAE+B,cACrBC,EAAWrB,GACfsB,OAAOC,eAAelC,EAAG,SAAU,CACjCmC,cAAc,EACdxB,UAEEyB,EAAa,KACjB,MAAMC,EAAUlD,EAAKwC,GACrB,GAAIU,IAAYlD,EAAKmD,SAAU,CAC7B,MAAMC,EAAOpD,EAAK,GAAGwC,SAErB,QADSL,IAATiB,EAAqBF,EAAQG,KAAKrD,EAAMoD,EAAMvC,GAAKqC,EAAQG,KAAKrD,EAAMa,GAClEA,EAAEyC,aAAc,MAC1B,CAMI,OALAtD,EAAKuD,MACkB,iBAAdvD,EAAKuD,OACXvD,EAAKuD,KAAKC,QACXxD,EAAKyD,SAAS5C,EAAE0B,SAChBM,EAAS7C,EAAKuD,OACT,CAAI,EAEPG,EAAa,KACjB,KAAOT,MAAiBjD,EAAOA,EAAKwD,QAAUxD,EAAK2D,YAAc3D,EAAKuD,QAAM,EAS9E,GAPAT,OAAOC,eAAelC,EAAG,gBAAiB,CACxCmC,cAAc,EACdY,IAAG,IACM5D,GAAQG,WAIfU,EAAEgD,aAAc,CAClB,MAAMC,EAAOjD,EAAEgD,eACfhB,EAASiB,EAAK,IACd,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAK7C,OAAS,IAChCjB,EAAO8D,EAAK/C,GACPkC,KAF8BlC,IAAK,CAGxC,GAAIf,EAAKwD,OAAQ,CACfxD,EAAOA,EAAKwD,OACZE,IACA,KACR,CACM,GAAI1D,EAAK2D,aAAehB,EACtB,KAER,CACG,MAAMe,IACPb,EAASH,EACX,CACA,SAASN,EAAiBL,EAAQP,EAAOc,EAASL,EAAQ8B,GAYxD,KAA0B,mBAAZzB,GAAwBA,EAAUA,IAChD,GAAId,IAAUc,EAAS,OAAOA,EAC9B,MAAMpC,SAAWsB,EACfwC,OAAmB7B,IAAXF,EAEV,GADAF,EAAUiC,GAAS1B,EAAQ,IAAMA,EAAQ,GAAGqB,YAAe5B,EACjD,WAAN7B,GAAwB,WAANA,EAAgB,CAEpC,GAAU,WAANA,IACFsB,EAAQA,EAAMyC,cACA3B,EAAS,OAAOA,EAEhC,GAAI0B,EAAO,CACT,IAAIhE,EAAOsC,EAAQ,GACftC,GAA0B,IAAlBA,EAAKkE,SACflE,EAAKoD,OAAS5B,IAAUxB,EAAKoD,KAAO5B,GAC/BxB,EAAOG,SAASgE,eAAe3C,GACtCc,EAAU8B,EAAcrC,EAAQO,EAASL,EAAQjC,EACvD,MAEQsC,EADc,KAAZA,GAAqC,iBAAZA,EACjBP,EAAOxB,WAAW6C,KAAO5B,EACpBO,EAAOsC,YAAc7C,CAEzC,MAAM,GAAa,MAATA,GAAuB,YAANtB,EAE1BoC,EAAU8B,EAAcrC,EAAQO,EAASL,OACpC,IAAU,aAAN/B,EAMT,OALAmC,GAAmB,KACjB,IAAIiC,EAAI9C,IACR,KAAoB,mBAAN8C,GAAkBA,EAAIA,IACpChC,EAAUF,EAAiBL,EAAQuC,EAAGhC,EAASL,EAAO,IAEjD,IAAMK,EACR,GAAIiC,MAAMC,QAAQhD,GAAQ,CAC/B,MAAMiD,EAAQ,GACRC,EAAepC,GAAWiC,MAAMC,QAAQlC,GAC9C,GAAIqC,EAAuBF,EAAOjD,EAAOc,EAASyB,GAEhD,OADA1B,GAAmB,IAAOC,EAAUF,EAAiBL,EAAQ0C,EAAOnC,EAASL,GAAQ,KAC9E,IAAMK,EAWf,GAAqB,IAAjBmC,EAAMxD,QAER,GADAqB,EAAU8B,EAAcrC,EAAQO,EAASL,GACrC+B,EAAO,OAAO1B,OACToC,EACc,IAAnBpC,EAAQrB,OACV2D,EAAY7C,EAAQ0C,EAAOxC,GA9dnC,SAAyB0B,EAAYkB,EAAGC,GACtC,IAAIC,EAAUD,EAAE7D,OACd+D,EAAOH,EAAE5D,OACTgE,EAAOF,EACPG,EAAS,EACTC,EAAS,EACTC,EAAQP,EAAEG,EAAO,GAAGK,YACpBC,EAAM,KACR,KAAOJ,EAASF,GAAQG,EAASF,GAC/B,GAAIJ,EAAEK,KAAYJ,EAAEK,GAApB,CAKA,KAAON,EAAEG,EAAO,KAAOF,EAAEG,EAAO,IAC9BD,IACAC,IAEF,GAAID,IAASE,EAAQ,CACnB,MAAMlF,EAAOiF,EAAOF,EAAWI,EAASL,EAAEK,EAAS,GAAGE,YAAcP,EAAEG,EAAOE,GAAWC,EACxF,KAAOD,EAASF,GAAMtB,EAAW4B,aAAaT,EAAEK,KAAWnF,EACjE,MAAW,GAAIiF,IAASE,EAClB,KAAOD,EAASF,GACTM,GAAQA,EAAInE,IAAI0D,EAAEK,KAAUL,EAAEK,GAAQM,SAC3CN,SAEG,GAAIL,EAAEK,KAAYJ,EAAEG,EAAO,IAAMH,EAAEK,KAAYN,EAAEG,EAAO,GAAI,CACjE,MAAMhF,EAAO6E,IAAIG,GAAMK,YACvB1B,EAAW4B,aAAaT,EAAEK,KAAWN,EAAEK,KAAUG,aACjD1B,EAAW4B,aAAaT,IAAIG,GAAOjF,GACnC6E,EAAEG,GAAQF,EAAEG,EAClB,KAAW,CACL,IAAKK,EAAK,CACRA,EAAM,IAAIG,IACV,IAAI1E,EAAIoE,EACR,KAAOpE,EAAIkE,GAAMK,EAAII,IAAIZ,EAAE/D,GAAIA,IACvC,CACM,MAAM4E,EAAQL,EAAI1B,IAAIiB,EAAEK,IACxB,GAAa,MAATS,EACF,GAAIR,EAASQ,GAASA,EAAQV,EAAM,CAClC,IAEE/E,EAFEa,EAAImE,EACNU,EAAW,EAEb,OAAS7E,EAAIiE,GAAQjE,EAAIkE,GACI,OAAtB/E,EAAIoF,EAAI1B,IAAIiB,EAAE9D,MAAgBb,IAAMyF,EAAQC,GACjDA,IAEF,GAAIA,EAAWD,EAAQR,EAAQ,CAC7B,MAAMnF,EAAO6E,EAAEK,GACf,KAAOC,EAASQ,GAAOhC,EAAW4B,aAAaT,EAAEK,KAAWnF,EACxE,MAAiB2D,EAAWkC,aAAaf,EAAEK,KAAWN,EAAEK,KAC/C,MAAMA,SACFL,EAAEK,KAAUM,QACzB,CAxCA,MAHMN,IACAC,GA4CN,CAwaaW,CAAgB/D,EAAQO,EAASmC,IAExCnC,GAAW8B,EAAcrC,GACzB6C,EAAY7C,EAAQ0C,IAEtBnC,EAAUmC,CACd,MAAS,GAAIjD,EAAM0C,SAAU,CAEzB,GAAIK,MAAMC,QAAQlC,GAAU,CAC1B,GAAI0B,EAAO,OAAQ1B,EAAU8B,EAAcrC,EAAQO,EAASL,EAAQT,GACpE4C,EAAcrC,EAAQO,EAAS,KAAMd,EAC3C,MAA0B,MAAXc,GAA+B,KAAZA,GAAmBP,EAAOxB,WAEjDwB,EAAO8D,aAAarE,EAAOO,EAAOxB,YADvCwB,EAAOgE,YAAYvE,GAErBc,EAAUd,CACd,CAAQ,CACN,OAAOc,CACT,CACA,SAASqC,EAAuBqB,EAAYvB,EAAOnC,EAAS2D,GAC1D,IAAIC,GAAU,EACd,IAAK,IAAInF,EAAI,EAAGoF,EAAM1B,EAAMxD,OAAQF,EAAIoF,EAAKpF,IAAK,CAChD,IAEEb,EAFEkG,EAAO3B,EAAM1D,GACfsF,EAAO/D,GAAWA,EAAQ0D,EAAW/E,QAEvC,GAAY,MAARmF,IAAyB,IAATA,IAA0B,IAATA,QAChC,GAA0B,WAArBlG,SAAWkG,IAAsBA,EAAKlC,SAC9C8B,EAAWM,KAAKF,QACX,GAAI7B,MAAMC,QAAQ4B,GACvBF,EAAUvB,EAAuBqB,EAAYI,EAAMC,IAASH,OACvD,GAAU,aAANhG,EACT,GAAI+F,EAAQ,CACV,KAAuB,mBAATG,GAAqBA,EAAOA,IAC1CF,EACEvB,EACEqB,EACAzB,MAAMC,QAAQ4B,GAAQA,EAAO,CAACA,GAC9B7B,MAAMC,QAAQ6B,GAAQA,EAAO,CAACA,KAC3BH,CACf,MACQF,EAAWM,KAAKF,GAChBF,GAAU,MAEP,CACL,MAAM1E,EAAQ+E,OAAOH,GACjBC,GAA0B,IAAlBA,EAAKnC,UAAkBmC,EAAKjD,OAAS5B,EAAOwE,EAAWM,KAAKD,GACnEL,EAAWM,KAAKnG,SAASgE,eAAe3C,GACnD,CACA,CACE,OAAO0E,CACT,CACA,SAAStB,EAAY7C,EAAQ0C,EAAOxC,EAAS,MAC3C,IAAK,IAAIlB,EAAI,EAAGoF,EAAM1B,EAAMxD,OAAQF,EAAIoF,EAAKpF,IAAKgB,EAAOwD,aAAad,EAAM1D,GAAIkB,EAClF,CACA,SAASmC,EAAcrC,EAAQO,EAASL,EAAQuE,GAC9C,QAAerE,IAAXF,EAAsB,OAAQF,EAAOsC,YAAc,GACvD,MAAMrE,EAAOwG,GAAerG,SAASgE,eAAe,IACpD,GAAI7B,EAAQrB,OAAQ,CAClB,IAAIwF,GAAW,EACf,IAAK,IAAI1F,EAAIuB,EAAQrB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC5C,MAAM2F,EAAKpE,EAAQvB,GACnB,GAAIf,IAAS0G,EAAI,CACf,MAAMC,EAAWD,EAAG/C,aAAe5B,EAC9B0E,GAAa1F,EAEb4F,GAAYD,EAAGlB,SADlBmB,EAAW5E,EAAO8D,aAAa7F,EAAM0G,GAAM3E,EAAOwD,aAAavF,EAAMiC,EAExE,MAAMwE,GAAW,CACxB,CACG,MAAM1E,EAAOwD,aAAavF,EAAMiC,GACjC,MAAO,CAACjC,EACV,iGCnhCA,MAAM4G,EAA6CA,EAAGC,OAAMC,mBAC1D,OAAAC,EAAAC,IAAAC,EAAAF,EAAAxG,WAAA2G,EAAAD,EAAA5B,YAAA8B,EAAAD,EAAA7B,YAAA+B,EAAAA,QAIe,IAAMN,EAAa,QAAOO,EAAAJ,EAD5B,QAAgB,SAATJ,EAAkB,SAAW,KAAIO,EAAAA,QAOtC,IAAMN,EAAa,QAAOO,EAAAH,EAD5B,QAAgB,SAATL,EAAkB,SAAW,KAAIO,EAAAA,QAOtC,IAAMN,EAAa,SAAQO,EAAAF,EAD7B,QAAgB,UAATN,EAAmB,SAAW,KAAIE,EAftD,IAAAA,EAAAE,EAAAC,EAAAC,CAesD,EAS5BG,EAAA,CAAA,kKCxB5B,SAAwBC,EAASC,GAC/B,MAAOC,EAAcC,GAAmBC,EAAa,IAC9CC,EAAQC,GAAaF,EAAuB,KAC5CG,EAAWC,GAAgBJ,GAAa,IACxCK,EAAgBC,GAAqBN,EAAa,CAAEO,KAAM,EAAGC,OAAQ,KACrEC,EAAaC,GAAkBV,GAAa,GAC/CW,IAAAA,EAGJ,MAAMC,EAAgBA,KACpB,MACMC,EAAQhB,EAAMiB,KAAKC,MAAM,KAC/B,IAAIC,EAAkB,GAClBC,EAAc,GAYXD,OAVPH,EAAMK,SAAkBC,IAClBF,EAAY3H,OAAS6H,EAAK7H,OAAS,GANnB,GAOF2H,IAAAA,EAAc,IAAM,IAAME,GAEtCF,GAAaD,EAAMrC,KAAKsC,EAAYG,WAC1BD,EAAAA,EAAAA,IAGdF,GAAaD,EAAMrC,KAAKsC,EAAYG,WAEjCJ,EAAMK,KAAK,KAAI,EAGlBC,EAAiBpI,IACjB,IAACiH,IAAa,OAGJ,QAAVjH,EAAE2B,KAA2B,UAAV3B,EAAE2B,KACvB3B,EAAEqI,iBAGJ,MAAMC,EAAOZ,IAAgBd,KAC7B,IAAI2B,EAAYvI,EAAE2B,IAGJ,UAAV3B,EAAE2B,KAA6B,YAAV3B,EAAE2B,KAA+B,QAAV3B,EAAE2B,KAA2B,SAAV3B,EAAE2B,OAKvD,UAAV3B,EAAE2B,KAA8B,MAAV3B,EAAE2B,KAAwB,OAAT2G,KAC7BC,EAAA,KACZvI,EAAEqI,kBAIU,cAAVrI,EAAE2B,IAUF4G,IAAcD,GACC9C,GAAAA,GAASA,EAAO,IACZgD,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,KACvCH,MAAmBc,IAAgBtH,OAAS,IAC9CoH,GAAe,GACfb,EAAM+B,gBAGR1B,MAAoB,IAAIxB,EAAMoB,OACxB6B,EAAAA,iBAAiB7B,IAAgB,IAAIG,IAAUH,OAnBjDA,IAAiB,IACFpB,GAAAA,GAASA,EAAO,IACtBA,GAAAA,GAASA,EAAKmD,QAAQzI,GAAMA,IAAM0G,IAAiB,MACzC4B,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,MAeuB,EAIlEyB,EAAuBA,KAC3B,MACMV,EADOJ,IAAgBkB,MAAM,EAAGhC,KACnBiB,MAAM,MACnBR,EAAOS,EAAM1H,OAAS,EACtBkH,EAASQ,EAAMA,EAAM1H,OAAS,GAAGA,OACrBgH,EAAA,CAAEC,OAAMC,UAAQ,EAG9BuB,EAAcA,KAClB3B,GAAa,GACbO,GAAWqB,OAAM,EAInBC,GAAQ,KACCvI,OAAAA,iBAAiB,UAAW4H,GAEnClB,GAAa,GACbO,GAAWqB,OAAM,IAGnBE,GAAU,KACDC,OAAAA,oBAAoB,UAAWb,EAAa,IAGrD,MAAMc,EAAaA,KACjB,MAAMpB,EAAQJ,IAAgBG,MAAM,MACpC,IAAIsB,EAAc,EAElB,OAAOrB,EAAMrD,KAAI,CAAC4C,EAAM+B,KACtB,MAAMC,EAAQhC,EAAKQ,MAAM,IAAIpD,KAAc6D,IACzC,MAAMxD,EAAQqE,IACd,IAAIzI,EAAY,eAQhB,OANIoE,EAAQ8B,IACVlG,EAAYqG,IAASuC,SAASxE,GAAS,aAAe,aAC7CA,IAAU8B,MACPlG,EAAA,gBAGd8F,EAAAN,EAAAC,IAAoBzF,GAAS6I,EAAArD,EAAGoC,GAAIpC,EAApC,IAAAA,CAAoC,IAkBlCkD,GAdAA,IAAcjC,IAAiBE,OAC7BF,IAAiBG,SAAWD,EAAKjH,OAE7BqF,EAAAA,KAAI+D,KAC2B,IAA5BrC,IAAiBG,OAEpBmC,EAAAA,QAAOD,KAGbH,EAAMK,OAAOvC,IAAiBG,OAAQ,EAACkC,MAKvCJ,EAAYtB,EAAM1H,OAAS,EAAG,CAChC,MACMuJ,EADeR,IACevC,IAAiB,aAAe,eACpEyC,EAAM5D,MAAIe,EAAAoD,EAAAC,IAAcF,GAAYC,GAAe,KAAzCA,EAGZE,EAAA,OAAAP,EAAAO,EAAAC,IAEKV,GAAKS,CAAA,GAGX,EAGH,MAAA,MAAAE,IAAAA,EAAAC,IAAAC,EAAAF,EAAAtK,WAAAyK,EAAAD,EAAAxK,WAAAA,WAAAwK,EAAA3D,QAKesC,EAD6HmB,MADxHI,mBAAT3C,EAAS2C,EAAT3C,EAASyC,GAATzC,EAASyC,EAAAX,EAAAY,EAKcjB,GAAU1C,GAAAA,IAAAA,EAAA0D,EAJ/B,+FAA8F3C,IAAgB,WAAa,OAAIyC,CAAA,EAJ5I,EAYF,CAACvD,EAAA,CAAA,oNC9JD,SAAwB4D,EAAS1D,GAC/B,MAAOC,EAAcC,GAAmBC,EAAa,IAC9CC,EAAQC,GAAaF,EAAuB,KAC5CG,EAAWC,GAAgBJ,GAAa,IACxCK,EAAgBC,GAAqBN,EAAa,CAAEO,KAAM,EAAGC,OAAQ,KACrEC,EAAaC,GAAkBV,GAAa,IAC5CwD,EAAcC,GAAmBzD,GAAa,GACjDW,IAAAA,EAEEW,MAAAA,EAAiBpI,IACjB,IAACiH,IAAa,OAGFjH,EAAAA,EAAEwK,iBAAiB,aAGrB,QAAVxK,EAAE2B,KAA2B,UAAV3B,EAAE2B,KACvB3B,EAAEqI,iBAGJ,MAAMC,EAAO3B,EAAMiB,KAAKhB,KACxB,IAAI2B,EAAYvI,EAAE2B,IAGJ,UAAV3B,EAAE2B,KAA6B,YAAV3B,EAAE2B,KAA+B,QAAV3B,EAAE2B,KAA2B,SAAV3B,EAAE2B,OAKvD,UAAV3B,EAAE2B,KAA8B,MAAV3B,EAAE2B,KAAwB,OAAT2G,KAC7BC,EAAA,KACZvI,EAAEqI,kBAIU,cAAVrI,EAAE2B,IAUF4G,IAAcD,GACC9C,GAAAA,GAASA,EAAO,IACZgD,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,KACvCH,MAAmBD,EAAMiB,KAAKxH,OAAS,IACzCoH,GAAe,GACfb,EAAM+B,gBAGR1B,MAAoB,IAAIxB,EAAMoB,OACxB6B,EAAAA,iBAAiB7B,IAAgB,IAAIG,IAAUH,OAnBjDA,IAAiB,IACFpB,GAAAA,GAASA,EAAO,IACtBA,GAAAA,GAASA,EAAKmD,QAAQzI,GAAMA,IAAM0G,IAAiB,MACzC4B,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,MAeuB,EAIlEyB,EAAuBA,KAC3B,MACMV,EADOnB,EAAMiB,KAAKgB,MAAM,EAAGhC,KACdiB,MAAM,MACnBR,EAAOS,EAAM1H,OAAS,EACtBkH,EAASQ,EAAMA,EAAM1H,OAAS,GAAGA,OACrBgH,EAAA,CAAEC,OAAMC,UAAQ,EAG9BuB,EAAcA,KAClB3B,GAAa,GACbO,GAAWqB,OAAM,EAInBC,GAAQ,KACCvI,OAAAA,iBAAiB,UAAW4H,GAEnClB,GAAa,GACbO,GAAWqB,OAAM,IAGnBE,GAAU,KACDC,OAAAA,oBAAoB,UAAWb,EAAa,IAGrD,MAAMc,EAAaA,KACjB,MAAMpB,EAAQnB,EAAMiB,KAAKC,MAAM,MAC/B,IAAIsB,EAAc,EAElB,OAAOrB,EAAMrD,KAAI,CAAC4C,EAAM+B,KACtB,MAAMC,EAAQhC,EAAKQ,MAAM,IAAIpD,KAAc6D,IACzC,MAAMxD,EAAQqE,IACd,IAAIzI,EAAY,eAQhB,OANIoE,EAAQ8B,IACVlG,EAAYqG,IAASuC,SAASxE,GAAS,aAAe,aAC7CA,IAAU8B,MACPlG,EAAA,gBAGd8F,EAAAN,EAAAC,IAAoBzF,GAAS6I,EAAArD,EAAGoC,GAAIpC,EAApC,IAAAA,CAAoC,IAkBlCkD,GAdAA,IAAcjC,IAAiBE,OAC7BF,IAAiBG,SAAWD,EAAKjH,OAE7BqF,EAAAA,KAAI+D,KAC2B,IAA5BrC,IAAiBG,OAEpBmC,EAAAA,QAAOD,KAGbH,EAAMK,OAAOvC,IAAiBG,OAAQ,EAACkC,MAKvCJ,EAAYtB,EAAM1H,OAAS,EAAG,CAChC,MACMuJ,EADeR,IACevC,IAAiB,aAAe,eACpEyC,EAAM5D,MAAIe,EAAAoD,EAAAC,IAAcF,GAAYC,GAAe,KAAzCA,EAGZE,EAAA,OAAAP,EAAAO,EAAAC,IAEKV,GAAKS,CAAA,GAGX,EAGH,MAAA,MAAAE,IAAAA,EAAAS,IAAAC,EAAAV,EAAAtK,WAAAiL,EAAAD,EAAAhL,WAAAA,WAAAsK,EAAAA,EAAAY,EAEKC,EAAI,CAAA,QAACC,GAAI,OAAER,GAAc,EAAA,YAAAS,GAAA,OAAAd,GAAA,IAAAS,GAAAA,EAAAnE,QASfsC,EADuImB,MADlII,mBAAT3C,EAAS2C,EAAT3C,EAASiD,GAATjD,EAASiD,EAAAnB,EAAAoB,EAKczB,GAAU1C,GAAAA,IAAAA,EAAAkE,EAJ/B,yGAAwGnD,IAAgB,WAAa,OAAIyC,CAAA,EAVtJ,EAkBF,CAACvD,EAAA,CAAA,uZCpJD,SAAwBuE,EAAUrE,GAChC,MAAOC,EAAcC,GAAmBC,EAAa,IAC9CC,EAAQC,GAAaF,EAAuB,KAC5CG,EAAWC,GAAgBJ,GAAa,IACxCK,EAAgBC,GAAqBN,EAAa,CAAEO,KAAM,EAAGC,OAAQ,KACrEC,EAAaC,GAAkBV,GAAa,GAC/CW,IAAAA,EAGJ,MAgCMwD,EAhCuBC,MAC3B,MAAMpD,EAAkB,GAKlBqD,EAAUlJ,OAAOmJ,KAAKzE,EAAM0E,iBAAiBjL,OAAS,EACxD6B,OAAOqJ,QAAQ3E,EAAM0E,iBAClBE,MAAK,EAAC,CAAGvH,IAAOC,CAAAA,KAAOA,EAAID,IAC3B4E,MAAM,EAAG,IACTnE,KAAI,EAAE9C,KAASA,IALF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KASlE,IAAA,IAASzB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAImH,EAAO,GACJA,KAAAA,EAAKjH,OAdO,IAcgB,CAGzBuB,GADIwJ,EAAQK,KAAKC,MAAMD,KAAKE,SAAWP,EAAQ/K,SAInDiH,EAAKjH,OApBQ,KAqBPiH,GAAA,IACV,CAEI5B,EAAAA,KAAK4B,EAAKa,UAAS,CAGpBJ,OAAAA,EAAMK,KAAK,KAAI,EAGH+C,GAGrBS,GAAa,KACX9E,EAAgB,GAChBG,EAAU,IACVQ,GAAe,GACfN,GAAa,GACbO,GAAWqB,OAAM,IAGbV,MAAAA,EAAiBpI,IACjB,IAACiH,IAAa,OAGJ,QAAVjH,EAAE2B,KAA2B,UAAV3B,EAAE2B,KACvB3B,EAAEqI,iBAGEC,MAAAA,EAAO2C,EAAarE,KAC1B,IAAI2B,EAAYvI,EAAE2B,IAGJ,UAAV3B,EAAE2B,KAA6B,YAAV3B,EAAE2B,KAA+B,QAAV3B,EAAE2B,KAA2B,SAAV3B,EAAE2B,OAKvD,UAAV3B,EAAE2B,KAA8B,MAAV3B,EAAE2B,KAAwB,OAAT2G,KAC7BC,EAAA,KACZvI,EAAEqI,kBAIU,cAAVrI,EAAE2B,IAUF4G,IAAcD,GACC9C,GAAAA,GAASA,EAAO,IACZgD,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,KACvCH,MAAmBqE,EAAa7K,OAAS,IAC3CoH,GAAe,GACfb,EAAM+B,gBAGR1B,MAAoB,IAAIxB,EAAMoB,OACxB6B,EAAAA,iBAAiB7B,IAAgB,IAAIG,IAAUH,OAnBjDA,IAAiB,IACFpB,GAAAA,GAASA,EAAO,IACtBA,GAAAA,GAASA,EAAKmD,QAAQzI,GAAMA,IAAM0G,IAAiB,MACzC4B,IACrB7B,EAAM8B,iBAAiB7B,IAAiB,EAAGG,MAeuB,EAIlEyB,EAAuBA,KAC3B,MACMV,EADOmD,EAAarC,MAAM,EAAGhC,KAChBiB,MAAM,MACnBR,EAAOS,EAAM1H,OAAS,EACtBkH,EAASQ,EAAMA,EAAM1H,OAAS,GAAGA,OACrBgH,EAAA,CAAEC,OAAMC,UAAQ,EAG9BuB,EAAcA,KAClB3B,GAAa,GACbO,GAAWqB,OAAM,EAInBC,GAAQ,KACCvI,OAAAA,iBAAiB,UAAW4H,GAEnClB,GAAa,GACbO,GAAWqB,OAAM,IAGnBE,GAAU,KACDC,OAAAA,oBAAoB,UAAWb,EAAa,IAGrD,MAAMc,EAAaA,KACXpB,MAAAA,EAAQmD,EAAapD,MAAM,MACjC,IAAIsB,EAAc,EAElB,OAAOrB,EAAMrD,KAAI,CAAC4C,EAAM+B,KACtB,MAAMC,EAAQhC,EAAKQ,MAAM,IAAIpD,KAAc6D,IACzC,MAAMxD,EAAQqE,IACd,IAAIzI,EAAY,eAQhB,OANIoE,EAAQ8B,IACVlG,EAAYqG,IAASuC,SAASxE,GAAS,aAAe,aAC7CA,IAAU8B,MACPlG,EAAA,gBAGd8F,EAAAN,EAAAC,IAAoBzF,GAAS6I,EAAArD,EAAGoC,GAAIpC,EAApC,IAAAA,CAAoC,IAkBlCkD,GAdAA,IAAcjC,IAAiBE,OAC7BF,IAAiBG,SAAWD,EAAKjH,OAE7BqF,EAAAA,KAAI+D,KAC2B,IAA5BrC,IAAiBG,OAEpBmC,EAAAA,QAAOD,KAGbH,EAAMK,OAAOvC,IAAiBG,OAAQ,EAACkC,MAKvCJ,EAAYtB,EAAM1H,OAAS,EAAG,CAChC,MACMuJ,EADeR,IACevC,IAAiB,aAAe,eACpEyC,EAAM5D,MAAIe,EAAAoD,EAAAC,IAAcF,GAAYC,GAAe,KAAzCA,EAGZE,EAAA,OAAAP,EAAAO,EAAAC,IAEKV,GAAKS,CAAA,GAGX,EAaH,MAAA,MAAAE,IAAAA,EAAAC,IAAAC,EAAAF,EAAAtK,WAAAyK,EAAAD,EAAAxK,WAAAA,WAAAwK,EAAA3D,QAKesC,EAAW,IJgTfzJ,EI7SiCwM,EAJ2G5B,MADnII,mBAAT3C,EAAS2C,EAAT3C,EAASyC,GAATzC,EAASyC,EAAAX,EAAAY,EAKcjB,GAAUK,EAAAS,GJ6SjC5K,EI1SNmI,MAAAA,IAHuCqE,EJ6S3BC,GAAW,IAAMzM,MI1ShB,KAAbwM,aAAAjB,EAAAF,IAAAqB,EAAAnB,EAAAjL,WAAA8E,YAAAuH,EAAAD,EAAAtH,YAAA+E,EAAAuC,GAIME,KAvBF/J,OAAOmJ,KAAKzE,EAAM0E,iBAAiBjL,OAAS,EAC/C6B,OAAOqJ,QAAQ3E,EAAM0E,iBAClBE,MAAK,EAAC,CAAGvH,IAAOC,CAAAA,KAAOA,EAAID,IAC3B4E,MAAM,EAAG,GACTnE,KAAI,EAAE9C,EAAKsK,MAAY,CAAEtK,MAAKsK,YALjB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAMlDxH,KAAY9C,IAAA,CAAEA,MAAKsK,MAAO,OAkBTxH,KAAI,EAAG9C,MAAKsK,mBAAOC,EAAAC,IAAAC,EAAAF,EAAAxM,YAAA2M,EAAAD,EAAA5H,aAAAA,YAAA0H,EAAAA,EAEvCvK,EAAGyK,GAAAF,EAAAA,EAAID,EAAKI,GAAAH,MAF2BA,EAAAE,EAAAC,CAI3C,MAACN,EAAAxF,QAIO,IAAMxG,OAAOuM,SAASC,SAAQ5B,GAZ5C,IAAAA,EAAAmB,EAAAC,CAiBA,GAAA,MAAAvF,GAAAA,IAAAA,EAAA0D,EAxBQ,0GAAyG3C,IAAgB,WAAa,OAAIyC,CAAA,EAJvJ,EA+BF,CAACvD,EAAA,CAAA,8gBCtND,SAAwB+F,EAAM7F,GAC5B,MAAO8F,EAAaC,GAAkB5F,EAAa,IAC5C6F,EAAUC,GAAe9F,GAAa,GACzC+F,IAAAA,EAGJlB,GAAa,KACgB,IAAvBhF,EAAMC,cACR8F,EAAe,GACfE,GAAY,GACRC,IACFC,cAAcD,GACNvL,OAAAA,IAEAqL,MACVC,GAAY,GACJ7M,EAAAA,OAAOgN,aAAY,KACrBJ,KACanH,GAAAA,GAAQA,EAAO,GAAC,GAEhC,KAAI,IAILwH,MAMAC,EAAeA,KACfR,GAAkB,IAAlBA,IAA4B,OAAA,EAC1BS,MAAAA,EAAUT,IAAgB,GAG1B9E,EAAQhB,EAAMC,aAAe,EAC5B4E,OAAAA,KAAK2B,MAAMxF,EAAQuF,EAAO,EAG7BE,EAAoBA,KACpBzG,GAAuB,IAAvBA,EAAMC,aAA2B,OAAA,IACrC,MAAMyG,EAAY1G,EAAMI,OAAO3G,OAASuG,EAAMC,aAC9C,OAAO4E,KAAK2B,MAAwB,KAAjB,EAAIE,GAAgB,EAGzC,OAAAnH,EAAAC,IAAAC,EAAAF,EAAAxG,WAAA2G,EAAAD,EAAA1G,WAAA4G,EAAAF,EAAA5B,YAAAoF,EAAAtD,EAAA5G,WAAAsK,EAAA1D,EAAA9B,YAAA9E,WAAAwK,EAAAF,EAAAtK,WAAA6J,EAAAlD,GAGuD2G,KAAAA,OAxBnCM,EAwB8Cb,IArBzD,GAFSjB,KAAKC,MAAM6B,EAAU,QACZA,EAAU,IACGlK,WAAWmK,SAAS,EAAG,OAH5CP,IAACM,CAwB4D,IAAA/D,EAAAK,EAIxBqD,GAAYjD,EAAAA,EAIdoD,EAAiBlD,GAAAhE,EAXvE,IAAAA,EAAAE,EAAAC,EAAAC,EAAAsD,EAAAI,EAAAE,CAgBF,kZCzDA,SAAwBsD,EAAW7G,GACjC,MAAOC,EAAcC,GAAmBC,EAAa,IAC9CC,EAAQC,GAAaF,EAAuB,KAC5Cd,EAAMyH,GAAW3G,EAAwC,SACzD4G,EAAYC,GAAiB7G,EAAa,KAC1C8G,EAAWC,GAAgB/G,EAAa,KACxCuE,EAAiByC,GAAsBhH,EAAqC,CAAA,IAC5EiH,EAAaC,GAAkBlH,EAAaH,EAAMiB,MAkBzD+D,GAAa,KACI,SAAX3F,IACFgI,EAjBoB,+MAkBA,SAAXhI,KACTgI,EAjBJ,gQAoBcC,GAAA,IAGd,MAAMA,EAAcA,KAClBpH,EAAgB,GAChBG,EAAU,IACV8G,EAAmB,CAAA,GAEbrF,EAAAA,iBAAiB,EAAG,GAAE,EAGxByF,EAAoBC,IACxBV,EAAQU,GAEIF,GAAA,EAGRG,EAAkBA,KACtB,GAAIV,IAAc,CAEhB,MAAMW,EAAcX,IAAa9E,MAAM,EAAG,KAC1CoF,EAAeK,GACfxH,EAAgB,GAChBG,EAAU,IACV2G,EAAc,GAAE,GAIdW,EAAwBC,UACxB,GAACX,IAED,IAEIY,MAAAA,EAASZ,IACZa,QAAQ,aAAc,6BACtBA,QAAQ,SAAU,KAEfC,QAAiBC,MAAMH,GAC7B,IAAKE,EAASE,GAAU,MAAA,IAAIC,MAAM,wBAE5BpP,MAEAqI,SAFgB4G,EAAS9G,QAETC,MAAM,MAAMe,MAAM,EAAG,KAAKT,KAAK,MACrD6F,EAAelG,GACfjB,EAAgB,GAChBG,EAAU,IACV6G,EAAa,UACNiB,GAEPC,MAAM,gEAA+D,GAInEC,EAAuBA,CAAClK,EAAemK,KAC3CpI,EAAgB/B,GAChBkC,EAAUiI,GACJxG,EAAAA,iBAAiB3D,EAAOmK,EAAS,EAGzC,OAAA/I,EAAAsD,IAAApD,EAAAF,EAAAxG,WAAA4G,EAAAF,EAAA1G,WAAAA,WAAAkK,EAAAtD,EAAA9B,YAAAsF,EAAAF,EAAApF,YAAA+B,EAAAA,QAMmB,IAAM2H,EAAiB,QAAO3H,EAAAA,QAM9B,IAAM2H,EAAiB,QAAO3H,EAAAA,QAM9B,IAAM2H,EAAiB,SAAQ9H,EAAAA,EAAAwE,EAK3CC,EAAI,CAAA,QAACC,GAAI,MAAa,UAAX9E,GAAkB,EAAA,YAAA+E,GAAA,INqfZ5L,EAAMkB,EAAMgC,EMrfA2H,EAAA7D,IAAA+D,EAAAF,EAAAtK,WAAAgL,EAAAR,EAAA1F,YAM6BwF,OAN7BE,EAAAgF,QAORlP,IACC,SAAXgG,IACF2H,EAAc3N,EAAE+B,cAAcpB,MAAMiI,MAAM,EAAG,MAEhC5I,EAAAA,EAAE+B,cAAcpB,MAAK,EN0e1BxB,EMxeXuL,ENweiBrK,EMxejB,QNweuBgC,EMpeJ,SAAX2D,IAAoBoI,EAAkBE,ENserD5K,MAAMC,QAAQtB,IAChBlD,EAAK,KAAKkB,KAAUgC,EAAQ,GAC5BlD,EAAK,KAAKkB,SAAcgC,EAAQ,IAC3BlD,EAAK,KAAKkB,KAAUgC,EMzemD8M,GAAAA,INidlF,SAAsBhQ,EAAMkB,EAAMM,GAEnB,MAATA,EAAexB,EAAKyB,gBAAgBP,GACnClB,EAAKiQ,aAAa/O,EAAMM,EAC/B,CMrdkFwO,CAAAjF,EAZvDlE,cAAW,SAAXA,IAAoB,mCAAqC,oDAAyCkE,EAAAvJ,MAC7F,SAAXqF,IAAoB0H,IAAeE,MAAW5D,CAAAA,IAAA,MAAA9D,EAAAA,EAAA0E,EAmB5DC,EAAI,CAAA,QAACC,GAAI,MAAa,SAAX9E,GAAiB,EAAA,YAAA+E,GAAA,OAAAH,EAC1BlE,EAAQ,CAAA,QACPkB,GAAI,OAAEmG,GAAa,EAAA,cACnBrF,GAAU,OAAE/B,EAAM+B,UAAU,EAC5BD,iBAAkBuG,GAAoB,IAAA,MAAA9I,EAAAA,EAAA0E,EAGzCC,EAAI,CAAA,QAACC,GAAI,MAAa,SAAX9E,GAAiB,EAAA,YAAA+E,GAAA,OAAAH,EAC1BP,EAAQ,CAAA,QACPzC,GAAI,OAAEmG,GAAa,EAAA,cACnBrF,GAAU,OAAE/B,EAAM+B,UAAU,EAC5BD,iBAAkBuG,GAAoB,IAAA,MAAA9I,EAAAA,EAAA0E,EAGzCC,EAAI,CAAA,QAACC,GAAI,MAAa,UAAX9E,GAAkB,EAAA,YAAA+E,GAAA,OAAAH,EAC3BI,EAAS,CAAA,QACRpD,GAAI,OAAEmG,GAAa,EAAA,cACnBrF,GAAU,OAAE/B,EAAM+B,UAAU,EAC5BD,iBAAkBuG,EAAoB,mBACtC3D,GAAe,OAAEA,GAAiB,EAClCgE,OAAQA,IAAMnB,EAAiB,SAAO,IAAA,MAAAhI,EAAAA,EAAA0E,EAIzC4B,EAAK,CAAA,gBACJ5F,GAAY,OAAEA,GAAc,EAAA,UAC5BG,GAAM,OAAEA,GAAQ,EAAA,cAChBuI,GAAU,OAAEvB,IAAc3N,MAAAA,IAAM,MAAAmP,GAAAC,IAAAC,IAAAA,EAtErB,QAAkB,SAAXzJ,IAAoB,SAAW,IAAI0J,EAM1C,QAAkB,SAAX1J,IAAoB,SAAW,IAAI2J,EAM1C,QAAkB,UAAX3J,IAAqB,SAAW,IAAIwJ,OAAAC,IAAAD,EAAAxP,GAAAwG,EAAAF,EAAAkJ,EAAAxP,EAAAyP,GAAAC,IAAAF,EAAAnQ,GAAAmH,EAAAoD,EAAA4F,EAAAnQ,EAAAqQ,GAAAC,IAAAH,EAAAxL,GAAAwC,EAAAsD,EAAA0F,EAAAxL,EAAA2L,GAAAH,CAAAA,GAAA,CAAAxP,OAAAsB,EAAAjC,OAAAiC,EAAA0C,OAAA1C,IAAA4E,EAjB5D,IAAAA,EAAAE,EAAAE,EAAAsD,EAAAE,CA+EF,CAACrD,EAAA,CAAA,QAAA,mLCjLD,SAASmJ,IACP,MAAOC,EAAWC,GAAgBhJ,GAAa,IACxCiJ,EAAWC,GAAgBlJ,EAA4B,MAExDkI,EAAuBA,KACtBe,KACUE,EAAAA,KAAKC,MAAK,EAIrBC,EAAiBA,OAIvB,OAAAjK,EAAAC,KAAAC,EAAAF,EAAAxG,YAAAA,WAAA0G,EAAAA,EAAAwE,EAKOC,EAAI,CAAA,QAACC,GAAI,OAAG+E,GAAW,EAAA,YAAA9E,GAAAH,MAAAA,CAAAA,EACrB7E,EAAY,CAACC,KAAI,OAAQC,aAAcA,SAAQ2E,EAC/C4C,EAAU,CACT5F,KAAI,GACJc,WAAYyH,EACZ1H,iBAAkBuG,IAAoB,IAAA,MAAA5I,EAAAA,EAAAwE,EAIzCC,EAAI,CAAA,QAACC,GAAI,OAAE+E,GAAW,EAAA,YAAA9E,GAAA,OAAAH,EACpBI,EAAS,CACRpD,KAAI,GACJc,WAAYyH,EACZ1H,iBAAkBuG,EAClB3D,gBAAiB,CAAC,EAClBgE,OAAQA,IAAMS,GAAa,IAAM,IAAA,MAAA5J,EApB3C,IAAAA,EAAAE,CA0BF,EPmgBA,SAAgBgK,EAAMtP,EAASuP,EAAMC,EAAU,CAAA,GAC7C,IAAIC,EACJC,GAAWC,IACTF,EAAWE,EACX3P,IAAYxB,SACR8Q,IACAnP,EAAOH,EAASsP,IAAQtP,EAAQpB,WAAa,UAAO4B,EAAW+O,EAAK,GACvEC,EAAQI,MAKb,CQrjBAC,EAAO,IAAA/F,EAAOgF,EAAM,CAAA,IAFPtQ,SAASsR,eAAe","x_google_ignoreList":[0]}